{"version":3,"file":"component---src-pages-management-how-about-this-blog-index-tsx-1006a0ea652a154f1864.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/seo.tsx","webpack://gatsby-starter-blog/./src/components/age.tsx","webpack://gatsby-starter-blog/./src/components/bio.tsx","webpack://gatsby-starter-blog/./src/pages/management/how-about-this-blog/index.tsx"],"sourcesContent":["/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport config from \"../../gatsby-config\"\n\ntype SeoProps = {\n  title: string\n  description?: string\n  location: Location\n  imagePath?: string\n  post?: CommonPost\n  children?: React.ReactNode\n}\n\nconst Seo = ({\n  title,\n  description,\n  location,\n  imagePath,\n  post,\n  children,\n}: SeoProps) => {\n  const { siteMetadata } = config as { siteMetadata: SiteMetadata }\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n\n  const metaDescription = description || siteMetadata.description\n  const fullTitle = isRootPath\n    ? siteMetadata.title\n    : `${title} | ${siteMetadata.title}`\n  const canonicalUrl =\n    siteMetadata.siteUrl + location.pathname.replace(/\\/page\\/([0-9])+\\//, \"\")\n  const imageUrl = `${siteMetadata.siteUrl}${\n    imagePath ? imagePath : \"/favicon.webp\"\n  }`\n\n  function createJsonLd() {\n    // JSON-LDの設定\n    const author = [\n      {\n        \"@type\": \"Person\",\n        name: siteMetadata.author.name,\n        description: siteMetadata.author.summary,\n        url: siteMetadata.siteUrl,\n        sameAs: [siteMetadata.social.twitter, siteMetadata.social.github],\n      },\n    ]\n\n    const publisher = {\n      \"@type\": \"Organization\",\n      name: siteMetadata.title,\n      description: siteMetadata.description,\n      logo: {\n        \"@type\": \"ImageObject\",\n        url: `${siteMetadata.siteUrl}/favicon.webp`,\n        width: 512,\n        height: 512,\n      },\n    }\n\n    let jsonLd = [\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": isRootPath ? \"webSite\" : \"webPage\",\n        inLanguage: \"ja\",\n        url: canonicalUrl,\n        name: title,\n        author: author,\n        publisher: publisher,\n        image: imageUrl,\n        description: metaDescription,\n      },\n    ]\n    if (post) {\n      const article = {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BlogPosting\",\n        url: canonicalUrl,\n        name: post.title,\n        headline: post.title,\n        image: {\n          \"@type\": \"ImageObject\",\n          url: imageUrl,\n        },\n        description: post.excerpt,\n        datePublished: new Date(post.date),\n        dateModified: new Date(post.dateModified),\n        mainEntityOfPage: {\n          \"@type\": \"WebPage\",\n          \"@id\": canonicalUrl,\n        },\n        author: author,\n        publisher: publisher,\n      }\n      // @ts-ignore\n      jsonLd = [...jsonLd, article]\n    }\n    return JSON.stringify(jsonLd)\n  }\n\n  let jsonLd = createJsonLd()\n\n  return (\n    <>\n      <html lang=\"ja\" />\n      <title>{fullTitle}</title>\n      <link rel=\"canonical\" href={canonicalUrl} />\n      <script type=\"application/ld+json\">{jsonLd}</script>\n\n      <meta name=\"description\" content={metaDescription} />\n      {imagePath && (\n        <>\n          <meta property=\"og:image\" content={imageUrl} />\n          <meta property=\"og:url\" content={imageUrl} />\n          <meta property=\"twitter:image\" content={imageUrl} />\n        </>\n      )}\n      <meta property=\"og:title\" content={fullTitle} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta\n        property=\"og:type\"\n        content={`${isRootPath ? \"website\" : \"webpage\"}`}\n      />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={siteMetadata.social.twitter} />\n      <meta name=\"twitter:title\" content={fullTitle} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\n\nimport config from \"../../gatsby-config\"\n\nconst Age = ({ birthday }: { birthday: string }) => {\n  return (\n    <>\n      {\n        Math.floor(\n          (new Date().valueOf() - new Date(birthday).valueOf()) / 31536000000\n        ) as number\n      }\n    </>\n  )\n}\nexport default Age\n","/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { StaticImage } from \"gatsby-plugin-image\"\nimport config from \"../../gatsby-config\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faGithub, faXTwitter } from \"@fortawesome/free-brands-svg-icons\"\nimport { Link } from \"gatsby\"\n\nconst Bio = () => {\n  const { siteMetadata } = config as { siteMetadata: SiteMetadata }\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config\n  const author = siteMetadata.author\n  const social = siteMetadata.social\n\n  return (\n    <div className=\"bio\">\n      <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"auto\", \"webp\", \"avif\"]}\n        src=\"../../static/24okBlock.webp\"\n        width={50}\n        height={50}\n        alt=\"Profile picture\"\n      />\n      <p>\n        <strong>{author.name}</strong>: <small>{author.summary}</small>\n        <br />\n        <Link\n          to={`https://github.com/${social.github}`}\n          target=\"_blank\"\n          rel=\"noopener\"\n        >\n          <FontAwesomeIcon\n            icon={faGithub}\n            fontSize={24}\n            style={{ color: \"black\" }}\n          />\n        </Link>\n        <Link\n          to={`https://twitter.com/${social.twitter}`}\n          target=\"_blank\"\n          rel=\"noopener\"\n        >\n          <FontAwesomeIcon\n            icon={faXTwitter}\n            fontSize={24}\n            style={{ color: \"black\" }}\n          />\n        </Link>\n      </p>\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\r\n\r\nimport Layout from \"../../../components/layout\"\r\nimport Seo from \"../../../components/seo\"\r\nimport Age from \"../../../components/age\"\r\nimport Bio from \"../../../components/bio\"\r\nimport { Link } from \"gatsby\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport {\r\n  faGolang,\r\n  faJava,\r\n  faPython,\r\n  faReact\r\n} from \"@fortawesome/free-brands-svg-icons\"\r\nimport styled from \"styled-components\"\r\nimport { StaticImage } from \"gatsby-plugin-image\"\r\n\r\nconst HowAboutThisBlog = ({ location }: { location: Location }) => {\r\n  return (\r\n    <Layout location={location}>\r\n      <Article>\r\n        <h1>このブログについて</h1>\r\n\r\n        <h2>本ブログの目的</h2>\r\n        <p>\r\n          「誰にでも分かりやすい」をモットーに、IT技術に関連するテーマを扱います。ITに詳しくない人にも理解できるよう、分かりやすく伝えることを目指します。\r\n        </p>\r\n\r\n        <h2>著者紹介</h2>\r\n        <Bio></Bio>\r\n        <p>\r\n          IT会社でシステムエンジニアとして、主にJavaを用いたアプリ開発に携わっています。\r\n          <br />\r\n          <Age birthday={\"1988/05/05\"} />\r\n          歳で、結婚\r\n          <Age birthday={\"2017/10/07\"} />\r\n          年目、二児(\r\n          <Age birthday={\"2020/11/07\"} />\r\n          歳、\r\n          <Age birthday={\"2024/01/11\"} />\r\n          歳)の父親でもあります。\r\n        </p>\r\n        <p>\r\n          様々な背景を持つ人たちとの交流を通じ、「伝えること」の大切さと難しさを実感しています。その経験を活かし、IT技術に関する情報を分かりやすく伝えることを目指しています。\r\n          常に学ぶ姿勢を持ち、最先端技術の理解を深めていくことを心掛けています。\r\n        </p>\r\n\r\n        <h3>主な使用言語</h3>\r\n        <ul>\r\n          <li>\r\n            Java\r\n            <FontAwesomeIcon icon={faJava} />\r\n            ： 業務レベル\r\n          </li>\r\n          <li>SQL： 業務レベル</li>\r\n          <li>\r\n            Go\r\n            <FontAwesomeIcon icon={faGolang} />\r\n            ： 趣味レベル(趣味でWebアプリケーションを実装。業務でも使えるレベル)\r\n          </li>\r\n          <li>\r\n            React(Typescript)\r\n            <FontAwesomeIcon icon={faReact} />\r\n            ： 趣味レベル(趣味でWebアプリケーションを実装。業務でも少し読むレベル)\r\n          </li>\r\n          <li>\r\n            HTML/CSS/JavaScript： 趣味レベル(Webアプリ実装経験があるためそれなりに。)\r\n          </li>\r\n          <li>C/C#： 趣味レベル(学生時代に使用していた)</li>\r\n          <li>\r\n            Python\r\n            <FontAwesomeIcon icon={faPython} />\r\n            ： 趣味レベル(趣味で簡単なツールを書いたり)\r\n          </li>\r\n          <li>Ruby： 趣味レベル(Ruby on Railsのチュートリアルをやった)</li>\r\n        </ul>\r\n\r\n        <h3>主な資格</h3>\r\n        <ul>\r\n          <li>DBスペシャリスト</li>\r\n          <li>セキュリティスペシャリスト</li>\r\n          <li>応用情報技術者</li>\r\n          <li>簿記 3級</li>\r\n          <li>英検 3級</li>\r\n          <li>漢検 2級</li>\r\n        </ul>\r\n\r\n        <h3>略歴</h3>\r\n        <ul>\r\n          <li>\r\n            2011年3月：千葉大学 工学部 画像科学科 卒業。\r\n          </li>\r\n          <li>\r\n            2013年3月：千葉大学 大学院融合科学研究科(修士課程) 卒業。\r\n          </li>\r\n          <li>\r\n            2013年4月：独立系SIer(システムインテグレータ)会社に就職。主に金融・カード関連のWebアプリケーション開発(Java)案件に従事。社内新人研修講師を担当したりも。\r\n          </li>\r\n          <li>\r\n            2017年4月：会計系の会社に転職。Java +\r\n            ExtJSを使ってバック+フロント共にWebアプリケーション開発に従事。\r\n          </li>\r\n          <li>\r\n            2019年5月：Alpaca\r\n            Japan株式会社というAI技術を用いた金融サービス系の会社に転職。Alpaca証券という証券サービスのWebアプリケーション開発案件で、開発者やQA(クオリティアシュアランス:品質保証)、SRE(サイトリライアビリティエンジニア)として従事。\r\n          </li>\r\n          <li>\r\n            2020年11月：育休を取得して育児に参加。\r\n          </li>\r\n          <li>\r\n            2021年4月：育休から職場復帰。\r\n          </li>\r\n          <li>\r\n            2024年1月：第二子誕生。再度育休を取得。\r\n          </li>\r\n          <li>\r\n            2024年8月：育休から職場復帰。引き続き、主にJavaやGolangを使った開発に従事。\r\n          </li>\r\n        </ul>\r\n\r\n        <h3>ポートフォリオ</h3>\r\n        <h4>アンガーログ</h4>\r\n        <p>\r\n          Angularで実装した、怒りをコントロールするために記録をつけるWebアプリ。<br />\r\n          <Link\r\n            to=\"https://nisioka.github.io/anger-log\"\r\n            target=\"_blank\"\r\n            rel=\"noopener\"\r\n          >\r\n            https://nisioka.github.io/anger-log\r\n          </Link>\r\n          <StaticImage\r\n            layout=\"fixed\"\r\n            formats={[\"auto\", \"webp\", \"avif\"]}\r\n            src=\"./anger-log.png\"\r\n            width={480}\r\n            height={360}\r\n            alt=\"Profile picture\"\r\n          />\r\n        </p>\r\n        <br />\r\n\r\n        <h4>公開停止<s>DroidJump</s></h4>\r\n        <p>\r\n          簡単アクションゲーム（Android用アプリケーション）\r\n          <br />\r\n          <Link\r\n            to=\"https://play.google.com/store/apps/details?id=com.nisioka.droidjump\"\r\n            target=\"_blank\"\r\n            rel=\"noopener\"\r\n          >\r\n            DroidJump\r\n          </Link>\r\n        </p>\r\n        <br />\r\n\r\n        <h4>公開停止<s>割り勘-Warikan-</s></h4>\r\n        <p>\r\n          割り勘計算ツール（Android用アプリケーション）\r\n          <br />\r\n          <Link\r\n            to=\"https://play.google.com/store/apps/details?id=com.dmp.warikan.www\"\r\n            target=\"_blank\"\r\n            rel=\"noopener\"\r\n          >\r\n            -Warikan-\r\n          </Link>\r\n        </p>\r\n      </Article>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const Head = ({ location }: { location: Location }) => (\r\n  <Seo title={\"このブログについて\"} location={location} />\r\n)\r\n\r\nexport default HowAboutThisBlog\r\n\r\nconst Article = styled.article`\r\n  margin: 0 auto;\r\n  background-color: #fff;\r\n\r\n  .time {\r\n    text-align: right;\r\n  }\r\n\r\n  .featuredImage {\r\n    text-align: center;\r\n  }\r\n`\r\n"],"names":["_ref","title","description","location","imagePath","post","children","siteMetadata","config","isRootPath","pathname","metaDescription","fullTitle","canonicalUrl","siteUrl","replace","imageUrl","jsonLd","author","name","summary","url","sameAs","social","twitter","github","publisher","logo","width","height","inLanguage","image","article","headline","excerpt","datePublished","Date","date","dateModified","mainEntityOfPage","concat","_toConsumableArray","JSON","stringify","createJsonLd","React","lang","rel","href","type","content","property","birthday","Math","floor","valueOf","Bio","className","StaticImage","layout","formats","src","alt","__imageData","require","Link","to","target","FontAwesomeIcon","icon","faGithub","fontSize","style","color","faXTwitter","Head","_ref2","Seo","Layout","Article","Age","faJava","faGolang","faReact","faPython","styled"],"sourceRoot":""}