{"version":3,"file":"component---src-templates-blog-post-tsx-14e95c5a532f89246d0b.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/templates/blog-post.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport styled from \"styled-components\"\nimport { convertCategory, mergePost, removeHtmlTags } from \"../utilFunction\"\nimport RelatedList from \"../components/related-list\"\nimport SyntaxHighlighter from \"react-syntax-highlighter\"\nimport parse, { domToReact } from \"html-react-parser\"\nimport { androidstudio } from \"react-syntax-highlighter/dist/cjs/styles/hljs\"\nimport { Disqus } from \"gatsby-plugin-disqus\"\nimport config from \"../../gatsby-config\"\n\ntype BlogPostTemplateProps = {\n  data: {\n    allFile: AllFile\n    markdownRemark: MdPost\n    mdPrevious: {\n      id: string\n      fields: {\n        slug: string\n      }\n      frontmatter: {\n        title: string\n        category: string\n      }\n    }\n    mdNext: {\n      id: string\n      fields: {\n        slug: string\n      }\n      frontmatter: {\n        title: string\n        category: string\n      }\n    }\n    wpPost: WpPost\n    wpPrevious: {\n      id: string\n      title: string\n      slug: string\n      categories: {\n        nodes: {\n          name: string\n        }[]\n      }\n    }\n    wpNext: {\n      id: string\n      title: string\n      slug: string\n      categories: {\n        nodes: {\n          name: string\n        }[]\n      }\n    }\n  }\n  location: Location\n}\n\nconst BlogPostTemplate = ({\n  data: {\n    allFile,\n    markdownRemark: md,\n    mdPrevious,\n    mdNext,\n    wpPost,\n    wpPrevious,\n    wpNext,\n  },\n  location,\n}: BlogPostTemplateProps) => {\n  const { siteMetadata } = config as { siteMetadata: SiteMetadata }\n\n  const post = {\n    id: md?.id || wpPost?.id,\n    title: md?.frontmatter.title || wpPost?.title,\n    content: md?.html || wpPost?.content,\n    excerpt: removeHtmlTags(md?.excerpt || wpPost?.excerpt),\n    slug:\n      md?.fields.slug.replace(/^\\//, \"\").replace(/\\/$/, \"\") ||\n      \"/\" + wpPost?.slug,\n    date: md?.frontmatter.date || wpPost?.date,\n    dateModified: md?.frontmatter.dateModified || wpPost?.modified,\n    description: md?.frontmatter.description,\n    altText: wpPost?.featuredImage?.node.altText || \"\",\n    gatsbyImage:\n      wpPost?.featuredImage?.node.gatsbyImage ||\n      getImage(allFile.edges[0]?.node.childImageSharp),\n    category: md?.frontmatter.category || wpPost?.categories?.nodes[0]?.name,\n    tags: md?.frontmatter.tags || wpPost?.tags?.nodes.map(t => t.name),\n  }\n  const previous = {\n    id: mdPrevious?.id || wpPrevious?.id,\n    title: mdPrevious?.frontmatter.title || wpPrevious?.title,\n    slug:\n      mdPrevious?.fields.slug.replace(/^\\//, \"\").replace(/\\/$/, \"\") ||\n      wpPrevious?.slug,\n    category:\n      mdPrevious?.frontmatter.category || wpPrevious?.categories.nodes[0].name,\n  }\n  const next = {\n    id: mdNext?.id || wpNext?.id,\n    title: mdNext?.frontmatter.title || wpNext?.title,\n    slug:\n      mdNext?.fields.slug.replace(/^\\//, \"\").replace(/\\/$/, \"\") || wpNext?.slug,\n    category:\n      mdNext?.frontmatter.category || wpNext?.categories?.nodes[0]?.name,\n  }\n\n  return (\n    <Layout location={location}>\n      <Article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.title}</h1>\n          <p>\n            <div className=\"time\">\n              <small>\n                <time>{post.date}</time>\n              </small>\n            </div>\n          </p>\n        </header>\n        <div className=\"featuredImage\">\n          <GatsbyImage image={post.gatsbyImage} alt={post.title} />\n        </div>\n        <Dl>\n          <dt>カテゴリ</dt>\n          <dd>\n            <Link to={`/category/${convertCategory(post.category)}`}>\n              {post.category}\n            </Link>\n          </dd>\n        </Dl>\n        <Dl>\n          <dt>タグ</dt>\n          {post.tags.map((tag, index) => {\n            return (\n              <dd key={`tag${index}`}>\n                <Link to={`/tag/${tag}/`}>{tag}</Link>\n              </dd>\n            )\n          })}\n        </Dl>\n\n        <BlogEntry>\n          <section itemProp=\"articleBody\">\n            {parse(post.content, { replace: replaceCode })}\n          </section>\n        </BlogEntry>\n        <hr />\n      </Article>\n      <BlogPostNav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous.slug && (\n              <Link\n                to={`/${convertCategory(previous.category)}/${previous.slug}`}\n                rel=\"prev\"\n              >\n                ← {previous.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next.slug && (\n              <Link\n                to={`/${convertCategory(next.category)}/${next.slug}`}\n                rel=\"next\"\n              >\n                {next.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </BlogPostNav>\n\n      <Disqus\n        config={{\n          url: `${siteMetadata.siteUrl}/${convertCategory(next.category)}/${\n            next.slug\n          }`,\n          identifier: `/${convertCategory(next.category)}/${next.slug}`,\n          title: post.title,\n        }}\n      />\n      <RelatedList slug={post.slug} category={post.category} tags={post.tags} />\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n    $imagePath: String\n  ) {\n    allFile(\n      filter: {\n        relativePath: { eq: $imagePath }\n        sourceInstanceName: { eq: \"images\" }\n      }\n    ) {\n      edges {\n        node {\n          childImageSharp {\n            gatsbyImageData(\n              height: 320\n              formats: [AUTO, WEBP, AVIF]\n              placeholder: BLURRED\n            )\n          }\n        }\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt\n      html\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        date(formatString: \"YYYY/MM/DD\")\n        dateModified(formatString: \"YYYY/MM/DD\")\n        description\n        category\n        tags\n      }\n    }\n    mdPrevious: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        category\n      }\n    }\n    mdNext: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        category\n      }\n    }\n    wpPost(id: { eq: $id }) {\n      id\n      title\n      content\n      excerpt\n      slug\n      date(formatString: \"YYYY/MM/DD\")\n      modified(formatString: \"YYYY/MM/DD\")\n      featuredImage {\n        node {\n          altText\n          gatsbyImage(height: 320)\n        }\n      }\n      categories {\n        nodes {\n          name\n        }\n      }\n      tags {\n        nodes {\n          name\n        }\n      }\n    }\n    wpPrevious: wpPost(id: { eq: $previousPostId }) {\n      title\n      slug\n      categories {\n        nodes {\n          name\n        }\n      }\n    }\n    wpNext: wpPost(id: { eq: $nextPostId }) {\n      title\n      slug\n      categories {\n        nodes {\n          name\n        }\n      }\n    }\n  }\n`\n\nexport const Head = ({\n  data: { allFile, markdownRemark, wpPost },\n  location,\n}: BlogPostTemplateProps) => {\n  const post = mergePost(markdownRemark, wpPost, allFile)\n  return (\n    <Seo\n      title={post.title}\n      description={post.excerpt}\n      location={location}\n      imagePath={\n        post.gatsbyImage ? post.gatsbyImage.images.fallback?.src : null\n      }\n      post={post}\n    />\n  )\n}\n\nconst replaceCode = (node: any) => {\n  if (!node) return node\n  if (node.name === \"pre\") {\n    const dom = domToReact(getCode(node))\n    let result = \"\"\n    switch (typeof dom) {\n      case \"string\":\n        result = dom as string\n        break\n      case \"object\":\n        if (Array.isArray(dom)) {\n          // React.JSX.Element[]\n          const elmArr = dom as React.JSX.Element[]\n          elmArr.map(elm => {\n            if (elm.props && elm.props.children) {\n              result += elm.props.children as string\n            }\n          })\n        } else {\n          // React.JSX.Element\n          const elm = dom as React.JSX.Element\n          if (elm.props && elm.props.children) {\n            result = elm.props.children as string\n          }\n        }\n        break\n    }\n\n    return (\n      node.children.length > 0 && (\n        <SyntaxHighlighter\n          style={androidstudio}\n          language={getLanguage(node)}\n          showLineNumbers={true}\n        >\n          {result}\n        </SyntaxHighlighter>\n      )\n    )\n  }\n}\n\nconst getLanguage = (node: any) => {\n  function getClassInLanguage(className: string) {\n    let result = \"\"\n    className.split(/\\s+/).forEach(s => {\n      if (s.startsWith(\"language-\")) {\n        result = s.replace(\"language-\", \"\")\n        return\n      }\n    })\n    return result\n  }\n\n  if (node.attribs.class && node.attribs.class !== \"wp-block-code\") {\n    return getClassInLanguage(node.attribs.class as string)\n  } else if (node.children[0]?.attribs?.class) {\n    return getClassInLanguage(node.children[0].attribs.class as string)\n  }\n  return \"java\" // default\n}\n\nconst getCode = (node: any) => {\n  if (node.children.length > 0 && node.children[0].name === \"code\") {\n    return node.children[0].children\n  } else {\n    return node.children\n  }\n}\n\nconst Article = styled.article`\n  margin: 0 auto;\n  background-color: #fff;\n\n  .time {\n    text-align: right;\n  }\n\n  .featuredImage {\n    text-align: center;\n  }\n`\nconst BlogEntry = styled.div`\n  margin: 15px 0 30px;\n  border-top: 1px solid #ccc;\n  border-bottom: 1px solid #ccc;\n`\nconst BlogPostNav = styled.nav`\n  margin: 0 auto;\n\n  ul {\n    display: flex;\n    justify-content: space-between;\n    list-style: none;\n  }\n`\nconst Dl = styled.dl`\n  display: flex;\n  margin: 0;\n\n  dt {\n    width: 80px;\n    font-weight: 700;\n  }\n\n  dd {\n    font-size: 14px;\n    margin-left: 0;\n    padding-left: 0;\n\n    & + dd {\n      margin-left: 15px;\n      margin-bottom: 5px;\n    }\n\n    a {\n      text-decoration: none;\n      border-radius: 3px;\n      color: #fff;\n      background: var(--orange);\n      padding: 2px 5px;\n\n      &:hover {\n        opacity: 0.5;\n      }\n    }\n  }\n`\n"],"names":["_ref","_wpPost$featuredImage","_wpPost$featuredImage2","_allFile$edges$","_wpPost$categories","_wpPost$categories$no","_wpPost$tags","_wpNext$categories","_wpNext$categories$no","data","allFile","markdownRemark","md","mdPrevious","mdNext","wpPost","wpPrevious","wpNext","location","siteMetadata","config","post","id","title","frontmatter","content","html","excerpt","removeHtmlTags","slug","fields","replace","date","dateModified","modified","description","altText","featuredImage","node","gatsbyImage","getImage","edges","childImageSharp","category","categories","nodes","name","tags","map","t","previous","next","React","Layout","Article","className","itemScope","itemType","itemProp","GatsbyImage","image","alt","Dl","Link","to","convertCategory","tag","index","key","BlogEntry","parse","replaceCode","BlogPostNav","style","display","flexWrap","justifyContent","listStyle","padding","rel","Disqus","url","siteUrl","identifier","RelatedList","Head","_ref2","_post$gatsbyImage$ima","mergePost","Seo","imagePath","images","fallback","src","dom","domToReact","getCode","result","Array","isArray","elm","props","children","length","SyntaxHighlighter","androidstudio","language","getLanguage","showLineNumbers","_node$children$","_node$children$$attri","getClassInLanguage","split","forEach","s","startsWith","attribs","class","styled","article","div","nav","dl"],"sourceRoot":""}