{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/information-technology/login-for-novice","result":{"data":{"allFile":{"edges":[]},"markdownRemark":null,"mdPrevious":null,"mdNext":null,"wpPost":{"id":"cG9zdDo5Mg==","title":"認証処理の心得【初心者向け】","content":"<h2>前置き</h2>\n<p>認証処理、所謂ログイン機能を作らなきゃ、でも初めてでよく分からないって人向けに、<br />\nログイン機能を作るうえでの、「基本だろ！」ってレベルの事も含めて説明する。<br />\n単純な機能ながらセキュリティ的にも気をつけなきゃいけないことも多い。だけど、気をけなきゃいけないことは決まってて、その対処もお作法が確立している。だからポイントを押さえてしまえば大丈夫。</p>\n<p>今から説明する認証方式は、一般的に広く使われる、「ログインID」と「パスワード」を使用した方式について説明する。</p>\n<h2>精査仕様</h2>\n<ol>\n<li>単項目精査<br />\n単項目精査というのは、「半角英数字のみ」だとか「異なる文字種を3種類以上」だとかその項目に対する条件を精査すること。<br />\n入力フォームなのでそういった精査をやりたくなりがちだが、ログイン時は不適である。<br />\n悪意のあるユーザにログインエラーメッセージから、ログインIDやパスワードの設定ポリシーの情報が推測されてしまうからである。<br />\n基本的に成功か失敗かが分かればよく、エラーメッセージは「ログインIDまたはパスワードが間違っています」と出せば良い。</li>\n<li>DB精査<br />\n多くの場合、ユーザ情報はDB(データベース)に格納されているという前提で話す。<br />\nログインIDとパスワードを条件に検索をかけて、一致するレコードが存在するかで、精査を行う。</p>\n<ol>\n<li>パスワード暗号化<br />\nパスワードは暗号化を行って保存し、DB検索時も暗号化をかけてから検索する。<br />\nこれもセキュリティ上の理由で、DBデータが漏洩した場合も元パスワードだけは分からないようにする保険的対策である。<br />\nまた、暗号化の方式には大きく、可逆暗号化と不可逆暗号化(ハッシュ化)の2つがある。</p>\n<ul>\n<li>・可逆暗号化：暗号化したあと復号が可能。DBデータが漏洩した場合、最悪解読される可能性がある。</li>\n<li>・不可逆暗号化(ハッシュ化)：復号が不可能(現実的には非常に困難)。パスワードは仕様的に平文を使用することも少ないはずなのでこちらの方式とするのが基本である。「パスワードリセットした時にメールでパスワードが送られて来た！」となると、ハッシュ化されてない事が分かり、叩かれる。</li>\n</ul>\n</li>\n<li>SQLインジェクション対策<br />\n上述の通り、DB検索をかけるので、SQLインジェクション対策は必ず行うこと。(認証処理に限ったことではないが)<br />\n「ログインID」「パスワード(暗号化)」はサニタイジングして、決してログインID・パスワードがわからなくても検索結果が取得出来てしまうようなことが無いように。これらはパラメータ化してSQLに埋め込むようにしよう。</li>\n</ol>\n</li>\n</ol>\n<h2>セッション</h2>\n<ul>\n<li>セッションフィクセーション対策<br />\nセッションフィクセーション(セッション固定化)攻撃対策のためのお作法。<br />\nログインID/パスワードが合っていて、ログインが通ったら、それまでのセッション情報を無効化し、新規にセッションを発行する。再発行を行わないと、悪意のあるユーザが正規のユーザにセッション(未ログイン)を送りつけてログインをさせて、セッションハイジャックする（要するにアカウントの乗っ取り）ことが出来てしまう。<br />\n認証完了後はセッション再発行と覚えておけば良い。</li>\n<li>セッション情報追加<br />\nまた、このタイミングでセッション情報追加を行う。Webアプリケーションの仕様にもちろん依るが、セッション間で持ち回るユーザ情報(例えばユーザIDなど)をセッションに保存しておく事が多い。</li>\n</ul>\n<h2>おわり</h2>\n<p>簡単にだけど説明は以上。<br />\nあまりまとまっている説明を見つけられなかったから思いついたレベルでまとめてみた。</p>\n","excerpt":"<p>前置き 認証処理、所謂ログイン機能を作らなきゃ、でも初めてでよく分からないって人向けに、 ログイン機能を作るうえでの、「基本だろ！」ってレベルの事も含めて説明する。 単純な機能ながらセキュリティ的にも気をつけなきゃいけな [&hellip;]</p>\n","slug":"login-for-novice","date":"2016/10/11","modified":"2018/08/02","featuredImage":{"node":{"altText":"","gatsbyImage":{"images":{"sources":[{"srcSet":"/_gatsby/image/0e3a1d89b01ac0826efb9a4203a21cce/f94d4bf04bfe08f2ded0bb24bfc3a7d0/010394e587e73553cee7938964154d7f.avif?u=http%3A%2F%2Flocalhost%2Fwp-content%2Fuploads%2F2016%2F10%2F010394e587e73553cee7938964154d7f.png&a=w%3D75%26h%3D100%26fm%3Davif%26q%3D75&cd=d7f9710a8e4d63e378989d02343e01f2 75w,/_gatsby/image/0e3a1d89b01ac0826efb9a4203a21cce/8035852ec0a0256db768e162c2cc304d/010394e587e73553cee7938964154d7f.avif?u=http%3A%2F%2Flocalhost%2Fwp-content%2Fuploads%2F2016%2F10%2F010394e587e73553cee7938964154d7f.png&a=w%3D150%26h%3D200%26fm%3Davif%26q%3D75&cd=d7f9710a8e4d63e378989d02343e01f2 150w,/_gatsby/image/0e3a1d89b01ac0826efb9a4203a21cce/e09f3cc2db91f0fc2d3651dfa973671d/010394e587e73553cee7938964154d7f.avif?u=http%3A%2F%2Flocalhost%2Fwp-content%2Fuploads%2F2016%2F10%2F010394e587e73553cee7938964154d7f.png&a=w%3D300%26h%3D400%26fm%3Davif%26q%3D75&cd=d7f9710a8e4d63e378989d02343e01f2 300w","type":"image/avif","sizes":"(min-width: 300px) 300px, 100vw"},{"srcSet":"/_gatsby/image/0e3a1d89b01ac0826efb9a4203a21cce/2a1f6ad4bb367490a1f619df95892674/010394e587e73553cee7938964154d7f.webp?u=http%3A%2F%2Flocalhost%2Fwp-content%2Fuploads%2F2016%2F10%2F010394e587e73553cee7938964154d7f.png&a=w%3D75%26h%3D100%26fm%3Dwebp%26q%3D75&cd=d7f9710a8e4d63e378989d02343e01f2 75w,/_gatsby/image/0e3a1d89b01ac0826efb9a4203a21cce/669209a0d78e7e30d86fa27f1bcde8cf/010394e587e73553cee7938964154d7f.webp?u=http%3A%2F%2Flocalhost%2Fwp-content%2Fuploads%2F2016%2F10%2F010394e587e73553cee7938964154d7f.png&a=w%3D150%26h%3D200%26fm%3Dwebp%26q%3D75&cd=d7f9710a8e4d63e378989d02343e01f2 150w,/_gatsby/image/0e3a1d89b01ac0826efb9a4203a21cce/471f9529fd190e592a42cb02502fdec2/010394e587e73553cee7938964154d7f.webp?u=http%3A%2F%2Flocalhost%2Fwp-content%2Fuploads%2F2016%2F10%2F010394e587e73553cee7938964154d7f.png&a=w%3D300%26h%3D400%26fm%3Dwebp%26q%3D75&cd=d7f9710a8e4d63e378989d02343e01f2 300w","type":"image/webp","sizes":"(min-width: 300px) 300px, 100vw"}],"fallback":{"src":"/_gatsby/image/0e3a1d89b01ac0826efb9a4203a21cce/6670c12e6af088fed3f2773d5619529c/010394e587e73553cee7938964154d7f.png?u=http%3A%2F%2Flocalhost%2Fwp-content%2Fuploads%2F2016%2F10%2F010394e587e73553cee7938964154d7f.png&a=w%3D75%26h%3D100%26fm%3Dpng%26q%3D75&cd=d7f9710a8e4d63e378989d02343e01f2","srcSet":"/_gatsby/image/0e3a1d89b01ac0826efb9a4203a21cce/6670c12e6af088fed3f2773d5619529c/010394e587e73553cee7938964154d7f.png?u=http%3A%2F%2Flocalhost%2Fwp-content%2Fuploads%2F2016%2F10%2F010394e587e73553cee7938964154d7f.png&a=w%3D75%26h%3D100%26fm%3Dpng%26q%3D75&cd=d7f9710a8e4d63e378989d02343e01f2 75w,/_gatsby/image/0e3a1d89b01ac0826efb9a4203a21cce/96a9defe418baad54373d87d0a65ff22/010394e587e73553cee7938964154d7f.png?u=http%3A%2F%2Flocalhost%2Fwp-content%2Fuploads%2F2016%2F10%2F010394e587e73553cee7938964154d7f.png&a=w%3D150%26h%3D200%26fm%3Dpng%26q%3D75&cd=d7f9710a8e4d63e378989d02343e01f2 150w,/_gatsby/image/0e3a1d89b01ac0826efb9a4203a21cce/d88bf9601a500a0782d0e59b2ec7b066/010394e587e73553cee7938964154d7f.png?u=http%3A%2F%2Flocalhost%2Fwp-content%2Fuploads%2F2016%2F10%2F010394e587e73553cee7938964154d7f.png&a=w%3D300%26h%3D400%26fm%3Dpng%26q%3D75&cd=d7f9710a8e4d63e378989d02343e01f2 300w","sizes":"(min-width: 300px) 300px, 100vw"}},"layout":"constrained","width":300,"height":400,"backgroundColor":"rgb(248,248,248)"}}},"categories":{"nodes":[{"name":"技術"}]},"tags":{"nodes":[{"name":"サインイン"},{"name":"ログイン"},{"name":"一般"}]}},"wpPrevious":{"title":"“Spring Boot” + “EXT JS”を使用したRESTアプリにおけるCSRF対策方針と実装例","slug":"qiita-001","categories":{"nodes":[{"name":"技術"}]}},"wpNext":{"title":"malware【マルウェア】","slug":"malware","categories":{"nodes":[{"name":"用語集"}]}}},"pageContext":{"id":"cG9zdDo5Mg==","previousPostId":"cG9zdDoxMDM=","nextPostId":"cG9zdDo1Nw==","imagePath":null}},"staticQueryHashes":["2488138200","3280520893"],"slicesMap":{}}