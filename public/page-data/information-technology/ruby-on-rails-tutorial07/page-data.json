{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/information-technology/ruby-on-rails-tutorial07","result":{"data":{"allFile":{"edges":[]},"markdownRemark":null,"mdPrevious":null,"mdNext":null,"wpPost":{"id":"cG9zdDoxNDgy","title":"Ruby on Rails チュートリアルをやってみた【第7章】","content":"\n<h2 class=\"wp-block-heading\">第7章の実績</h2>\n\n\n\n<p><a rel=\"noreferrer noopener\" aria-label=\"第7章 ユーザー登録 (opens in a new tab)\" href=\"https://railstutorial.jp/chapters/sign_up?version=5.1#cha-sign_up\" target=\"_blank\">第7章 ユーザー登録</a> を実施しました！<br>実施時間: 4時間</p>\n\n\n\n<h3 class=\"wp-block-heading\">学べたこと</h3>\n\n\n\n<ul><li>デバッグ情報の埋め込み<ul><li>ビルトインの&#8221;debug&#8221;メソッド<br>例えば&lt;%= debug(params) if Rails.env.development? %&gt;をerbに記載すれば、&#8221;params&#8221;の情報を&#8221;開発環境でのみ&#8221;表示することができます。</li><li> byebug gemによる&#8221;debugger&#8221;メソッド<br>Gemfileに&#8221;byebug&#8221;の依存関係の指定があれば、debuggerメソッドが使えるようになり、サーバー起動中に中断するブレイクポイントとなります。 Railsアプリケーションの中でよく分からない挙動があったら、トラブルが起こっていそうなコードの近くに差し込むのがコツです。</li></ul></li><li>RESTfulなルーティング指定<br>「resources :users」とroutes.rbに記載するだけで、以下のuserに対する、取得/新規作成/更新/削除といったRESTfulなルーティング指定を全てしてくれます。</li></ul>\n\n\n\n<table class=\"wp-block-table\"><tbody><tr><td>HTTPリクエスト</td><td>URL</td><td>アクション</td><td>名前付きルート</td><td>用途</td></tr><tr><td><code>GET</code></td><td>/users</td><td><code>index</code></td><td><code>users_path</code></td><td>すべてのユーザーを一覧するページ</td></tr><tr><td><code>GET</code></td><td>/users/1</td><td><code>show</code></td><td><code>user_path(user)</code></td><td>特定のユーザーを表示するページ</td></tr><tr><td><code>GET</code></td><td>/users/new</td><td><code>new</code></td><td><code>new_user_path</code></td><td>ユーザーを新規作成するページ (ユーザー登録)</td></tr><tr><td><code>POST</code></td><td>/users</td><td><code>create</code></td><td><code>users_path</code></td><td>ユーザーを作成するアクション</td></tr><tr><td><code>GET</code></td><td>/users/1/edit</td><td><code>edit</code></td><td><code>edit_user_path(user)</code></td><td>id=<code>1</code>のユーザーを編集するページ</td></tr><tr><td><code>PATCH</code></td><td>/users/1</td><td><code>update</code></td><td><code>user_path(user)</code></td><td>ユーザーを更新するアクション</td></tr><tr><td><code>DELETE</code></td><td>/users/1</td><td><code>destroy</code></td><td><code>user_path(user)</code></td><td>ユーザーを削除するアクション</td></tr></tbody></table>\n\n\n\n<ul><li>form_forヘルパーメソッド<br> &lt;%= form_for(@user, url: signup_path) do |f| %&gt;とerbに記載すると、Active Recordのオブジェクト（ここでは@user）を取り込み、そのオブジェクトの属性を使ってフォームを構築します。</li><li> Strong Parameters<br>以下のように定義することで、paramsに、&#8221;:user&#8221;を必須とし、&#8221;:name&#8221;、&#8221;:email&#8221;、&#8221;:password&#8221;、&#8221;password_confirmation&#8221;のみ入力を許可するという制約を設けることができます。<br>以前のバージョンのRailsでは、モデル層で<em>attr_accessible</em>メソッドを使うことでマスアサインメント脆弱性を防止していましたが、Rails 4.0以降ではコントローラ層でこのStrong Parametersというテクニックを使うことが推奨されているそうです。また、 これらのパラメータを使いやすくするために、<code>user_params</code>という外部メソッドを使うのが慣習になっています。 </li></ul>\n\n\n\n<pre class=\"wp-block-code\"><code>private\n\n  def user_params\n    params.require(:user).permit(:name, :email, :password, :password_confirmation)\n  end</code></pre>\n\n\n\n<ul><li>redirect_to @user = redirect_to user_url(@user)</li></ul>\n\n\n\n<h3 class=\"wp-block-heading\">独自にやったこと</h3>\n\n\n\n<h4 class=\"wp-block-heading\">デプロイ時にdb:migrateが自動で流れるよう設定</h4>\n\n\n\n<p>本番環境へのデプロイ時、毎度手動でdb:migrateを流すのが面倒だったので、HerokuのRelease Phaseという機能を用いて、「rails db:migrate 」を自動で流れるように設定しました。下記のようにProcfileに「release:」から始まる一行を追加するだけです。</p>\n\n\n\n<script src=\"https://gist-it.appspot.com/github/nisioka/RubyOnRailsTutorial/blob/sign-up/Procfile\"></script>\n\n\n\n<h2 class=\"wp-block-heading\">参考</h2>\n\n\n\n<h3 class=\"wp-block-heading\">環境</h3>\n\n\n\n<ul><li>ruby: 2.3.3</li><li>ruby on rails: 5.1.4</li><li>OS: Windows 10 (64bit)</li><li>IDE: IntelliJ ULTIMATE 2018.1</li><li>リポジトリ：GitHub</li></ul>\n\n\n\n<figure class=\"wp-block-embed\"><div class=\"wp-block-embed__wrapper\">\nhttps://github.com/nisioka/RubyOnRailsTutorial/tree/static-pages\n</div></figure>\n\n\n\n<h3 class=\"wp-block-heading\">リンク</h3>\n\n\n\n<ul><li><a href=\"https://railstutorial.jp/chapters/sign_up?version=5.1#cha-sign_up\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\"第7章 ユーザー登録 (opens in a new tab)\">第7章 ユーザー登録</a></li></ul>\n\n\n\n<p>【スポンサードリンク】</p>\n\n\n\n<figure class=\"wp-block-image\"><a href=\"//af.moshimo.com/af/c/click?a_id=1184149&amp;p_id=1024&amp;pc_id=1450&amp;pl_id=15158&amp;guid=ON\" target=\"_blank\" rel=\"noreferrer noopener\"><img decoding=\"async\" src=\"//image.moshimo.com/af-img/0330/000000015158.jpg\" alt=\"\"/></a></figure>\n\n\n\n<figure class=\"wp-block-image\"><a href=\"//af.moshimo.com/af/c/click?a_id=1124058&amp;p_id=936&amp;pc_id=1196&amp;pl_id=21425&amp;guid=ON\" target=\"_blank\" rel=\"noreferrer noopener\"><img decoding=\"async\" src=\"//image.moshimo.com/af-img/0288/000000021425.jpg\" alt=\"\"/></a></figure>\n","excerpt":"<p>第7章の実績 第7章 ユーザー登録 を実施しました！実施時間: 4時間 学べたこと デバッグ情報の埋め込み ビルトインの&#8221;debug&#8221;メソッド例えば&lt;%= debug(params) if  [&hellip;]</p>\n","slug":"ruby-on-rails-tutorial07","date":"2019/03/09","modified":"2019/03/09","featuredImage":{"node":{"altText":"","gatsbyImage":{"images":{"sources":[{"srcSet":"/_gatsby/image/434fbbd67bd923da8351a4fb7740023a/0e09895dd2f84a4b6c128ec47a7ed95b/Ruby_On_Rails_Logo.svg.avif?u=http%3A%2F%2Flocalhost%2Fwp-content%2Fuploads%2F2018%2F06%2FRuby_On_Rails_Logo.svg.png&a=w%3D30%26h%3D11%26fm%3Davif%26q%3D75&cd=04849a938628fcf1eccf16be92bf8b94 30w,/_gatsby/image/434fbbd67bd923da8351a4fb7740023a/46da5dfede0ceff6ea2e8439253a64b2/Ruby_On_Rails_Logo.svg.avif?u=http%3A%2F%2Flocalhost%2Fwp-content%2Fuploads%2F2018%2F06%2FRuby_On_Rails_Logo.svg.png&a=w%3D61%26h%3D23%26fm%3Davif%26q%3D75&cd=04849a938628fcf1eccf16be92bf8b94 61w,/_gatsby/image/434fbbd67bd923da8351a4fb7740023a/6784fd3154cd9ecbc222d8de4549ed9f/Ruby_On_Rails_Logo.svg.avif?u=http%3A%2F%2Flocalhost%2Fwp-content%2Fuploads%2F2018%2F06%2FRuby_On_Rails_Logo.svg.png&a=w%3D121%26h%3D46%26fm%3Davif%26q%3D75&cd=04849a938628fcf1eccf16be92bf8b94 121w,/_gatsby/image/434fbbd67bd923da8351a4fb7740023a/ae007ce4f54c6904111e8c16baeaf0ef/Ruby_On_Rails_Logo.svg.avif?u=http%3A%2F%2Flocalhost%2Fwp-content%2Fuploads%2F2018%2F06%2FRuby_On_Rails_Logo.svg.png&a=w%3D242%26h%3D91%26fm%3Davif%26q%3D75&cd=04849a938628fcf1eccf16be92bf8b94 242w","type":"image/avif","sizes":"(min-width: 121px) 121px, 100vw"},{"srcSet":"/_gatsby/image/434fbbd67bd923da8351a4fb7740023a/70613986f764c0d6e13740448af2b8b4/Ruby_On_Rails_Logo.svg.webp?u=http%3A%2F%2Flocalhost%2Fwp-content%2Fuploads%2F2018%2F06%2FRuby_On_Rails_Logo.svg.png&a=w%3D30%26h%3D11%26fm%3Dwebp%26q%3D75&cd=04849a938628fcf1eccf16be92bf8b94 30w,/_gatsby/image/434fbbd67bd923da8351a4fb7740023a/06633a1f16631b160d97294254627ed2/Ruby_On_Rails_Logo.svg.webp?u=http%3A%2F%2Flocalhost%2Fwp-content%2Fuploads%2F2018%2F06%2FRuby_On_Rails_Logo.svg.png&a=w%3D61%26h%3D23%26fm%3Dwebp%26q%3D75&cd=04849a938628fcf1eccf16be92bf8b94 61w,/_gatsby/image/434fbbd67bd923da8351a4fb7740023a/362bf1969b289b203f2e0832707f5ec9/Ruby_On_Rails_Logo.svg.webp?u=http%3A%2F%2Flocalhost%2Fwp-content%2Fuploads%2F2018%2F06%2FRuby_On_Rails_Logo.svg.png&a=w%3D121%26h%3D46%26fm%3Dwebp%26q%3D75&cd=04849a938628fcf1eccf16be92bf8b94 121w,/_gatsby/image/434fbbd67bd923da8351a4fb7740023a/d274bbb1deeb0ae0af15e5c720ca30d1/Ruby_On_Rails_Logo.svg.webp?u=http%3A%2F%2Flocalhost%2Fwp-content%2Fuploads%2F2018%2F06%2FRuby_On_Rails_Logo.svg.png&a=w%3D242%26h%3D91%26fm%3Dwebp%26q%3D75&cd=04849a938628fcf1eccf16be92bf8b94 242w","type":"image/webp","sizes":"(min-width: 121px) 121px, 100vw"}],"fallback":{"src":"/_gatsby/image/434fbbd67bd923da8351a4fb7740023a/319e2778a707b6753c00f60c291e0fef/Ruby_On_Rails_Logo.svg.png?u=http%3A%2F%2Flocalhost%2Fwp-content%2Fuploads%2F2018%2F06%2FRuby_On_Rails_Logo.svg.png&a=w%3D30%26h%3D11%26fm%3Dpng%26q%3D75&cd=04849a938628fcf1eccf16be92bf8b94","srcSet":"/_gatsby/image/434fbbd67bd923da8351a4fb7740023a/319e2778a707b6753c00f60c291e0fef/Ruby_On_Rails_Logo.svg.png?u=http%3A%2F%2Flocalhost%2Fwp-content%2Fuploads%2F2018%2F06%2FRuby_On_Rails_Logo.svg.png&a=w%3D30%26h%3D11%26fm%3Dpng%26q%3D75&cd=04849a938628fcf1eccf16be92bf8b94 30w,/_gatsby/image/434fbbd67bd923da8351a4fb7740023a/c5dc4c63956ad0f4563c788fd8e026f5/Ruby_On_Rails_Logo.svg.png?u=http%3A%2F%2Flocalhost%2Fwp-content%2Fuploads%2F2018%2F06%2FRuby_On_Rails_Logo.svg.png&a=w%3D61%26h%3D23%26fm%3Dpng%26q%3D75&cd=04849a938628fcf1eccf16be92bf8b94 61w,/_gatsby/image/434fbbd67bd923da8351a4fb7740023a/48703c6936685c92cf7b4f7ee4bd67fb/Ruby_On_Rails_Logo.svg.png?u=http%3A%2F%2Flocalhost%2Fwp-content%2Fuploads%2F2018%2F06%2FRuby_On_Rails_Logo.svg.png&a=w%3D121%26h%3D46%26fm%3Dpng%26q%3D75&cd=04849a938628fcf1eccf16be92bf8b94 121w,/_gatsby/image/434fbbd67bd923da8351a4fb7740023a/fd53ab674b85dd0a33a076d58e13f7b4/Ruby_On_Rails_Logo.svg.png?u=http%3A%2F%2Flocalhost%2Fwp-content%2Fuploads%2F2018%2F06%2FRuby_On_Rails_Logo.svg.png&a=w%3D242%26h%3D91%26fm%3Dpng%26q%3D75&cd=04849a938628fcf1eccf16be92bf8b94 242w","sizes":"(min-width: 121px) 121px, 100vw"}},"layout":"constrained","width":121,"height":46,"backgroundColor":"rgb(8,8,8)"}}},"categories":{"nodes":[{"name":"技術"}]},"tags":{"nodes":[{"name":"ruby"},{"name":"ruby on rails"}]}},"wpPrevious":{"title":"Ruby on Rails チュートリアルをやってみた【第8章】","slug":"ruby-on-rails-tutorial08","categories":{"nodes":[{"name":"技術"}]}},"wpNext":{"title":"Ruby on Rails チュートリアルをやってみた【第6章】","slug":"ruby-on-rails-tutorial06","categories":{"nodes":[{"name":"技術"}]}}},"pageContext":{"id":"cG9zdDoxNDgy","previousPostId":"cG9zdDoxNzc2","nextPostId":"cG9zdDoxMTcx","imagePath":null}},"staticQueryHashes":["2488138200","3280520893"],"slicesMap":{}}